generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  emailVerifiedAt DateTime?

  notes      Note[]
  categories Category[]
  tags       Tag[]
  tokens     Token[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Note {
  id      String @id @default(cuid())
  title   String
  content String

  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  categoryId String?   @map("category_id")
  category   Category? @relation(fields: [categoryId], references: [id])

  tags Tag[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([id, authorId])
  @@map("notes")
}

model Category {
  id   String @id @default(cuid())
  name String

  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  notes Note[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([id, authorId])
  @@unique([name, authorId])
  @@map("categories")
}

model Tag {
  id   String @id @default(cuid())
  name String

  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  notes Note[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([name, authorId])
  @@unique([id, authorId])
  @@map("tags")
}

model Token {
  id        String   @id @default(cuid())
  token     String   @unique
  type      String
  expiresAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}
