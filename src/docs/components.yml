components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        emailVerifiedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: clqqfhkxz0000qtpeh2ujs4er
        email: fake@example.com
        name: fake name
        emailVerifiedAt: 2023-12-29T09:30:21.864Z
        createdAt: 2023-12-29T09:25:21.864Z
        updatedAt: 2023-12-29T09:25:21.864Z

    Note:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        authorId:
          type: string
        categoryId:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: clqqfhkxz0000qtpeh2ujs4er
        title: note title
        content: note description
        authorId: clqtd1znt0000qtvw80rjy9h1
        categoryId: clqtd2uli000eqtvwopcrwuz0
        createdAt: 2023-12-29T09:25:21.864Z
        updatedAt: 2023-12-29T09:25:21.864Z

    Category:
      type: object
      properties:
        id:
          type: string
          example: clqqfhkxz0000qtpeh2ujs4er
        name:
          type: string
          example: work
        authorId:
          type: string
          example: clqtd1znt0000qtvw80rjy9h1
        createdAt:
          type: string
          format: date-time
          example: 2023-12-29T09:25:21.864Z
        updatedAt:
          type: string
          format: date-time
          example: 2023-12-29T09:25:21.864Z

    Tag:
      type: object
      properties:
        id:
          type: string
          example: clqqfhkxz0000qtpeh2ujs4er
        name:
          type: string
          example: javascript
        authorId:
          type: string
          example: clqtd1znt0000qtvw80rjy9h1
        createdAt:
          type: string
          format: date-time
          example: 2023-12-29T09:25:21.864Z
        updatedAt:
          type: string
          format: date-time
          example: 2023-12-29T09:25:21.864Z

    Error:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string

  requestBody:
    Note:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - content
            properties:
              title:
                type: string
              content:
                type: string
              categoryId:
                type: string
              tags:
                type: array
                items:
                  type: string
            example:
              title: note title
              content: note content
              categoryId: clqtd2uli000gqtvwk8b3vb5o
              tags:
                - travel

  parameters:
    NotesPagination:
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
        default: 10
        description: Maximum number of notes
      - in: query
        name: page
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - in: query
        name: search
        schema:
          type: string
        description: search for notes
      - in: query
        name: include
        schema:
          type: string
          enum:
            - category
            - tags
            - tags,category
            - category,tags
        description: include notes tags or categories or both

  responses:
    AccessToken:
      description: Ok
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
            example:
              access_token: FIjewtb-NsJEvI8OencV5Xu4n614-3ZxX1jWMSMQ1Za5cvEZRd7dKqWqQbU0CyWDDgjEIAC2FQgLiRx7YarR1HEoBPmiFosJcJIQzkEQM0t5iDaE5h6slS2l-BJrQP3-X-wF-TytvPSPo_zBI87H_6wqDL8sYOsjgPoKqpwTjDvhfJHnTunkUw4olm3aNVBvFhm_J-6rwnbmiN5UCBRYgpRVFuk-j4RoACvCcmwxixs
    ValidationFailed:
      description: Input validation failed
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: 400
              message:
                type: string
                example: Validation failed
              errors:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: password
                    error:
                      type: string
                      example: String must contain at least 8 character(s)
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            statusCode: 401
            message: Unauthorized
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            statusCode: 404
            message: Not Found
    PaginatedNotes:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  current_page:
                    type: integer
                    example: 2
                  next_page:
                    type: integer
                    example: 3
                  prev_page:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 4
                  per_page:
                    type: integer
                    example: 20
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Note'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
